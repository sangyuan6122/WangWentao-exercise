Thinking1	 高德地图中的路径规划原理是怎样的？
1）算法:Dijkstra、Floyd、A*(A-star)等
2)路径规划
  Dijkstra
    s：起点；S：已知到起点最短路径的点；U：未知到起点最短路径的点
    Step 1：S中只有起点s，从U中找出路径最短的
    Step 2：更新U中的顶点和顶点对应的路径
    重复Step 1，Step 2
  Floyd
    任意节点i到j的最短路径只有两种
    直接从i到j，即Dis(i,j)
    从i经过若干个节点k到j，若Dis(i,k)+Dis(k,j)<Dis(i,j)，则更新Dis(i,j)
    三层for循环，复杂度 n3
    用邻接矩阵保存节点间起始举例
    图论工具
  NetworkX
    gml：地理位置的xml文件
    地图导航原理
    在路口设置节点
    节点间权重为流速
    通过雷达获取流速（车密度）
    发现新路径，是否切换路径？
    动态计算，推荐
    网络固定，流速变化
  路网节点多，复杂情况下如何进行实时响应
    如从北京到上海
    分层计算
    先以城市为节点
    城市之间再用动态规划（Dijkstra）计算
  图的其他应用
    PageRank
    节点影响力
    基于图的推荐算法

Thinking2	football.gml数据集中，美国大学生足球联赛，包括115支球队，被分为12个联盟。为什么使用LPA标签传播进行社区发现，只发现了11个社区？
1)LPA主要思想是起初每个节点拥有独立的标签，那么网络中有n不同标签，每次迭代中对于每个节点将其标签更改为其邻接点中出现次数最多的标签，如果这样的标签有多个，则随机选择一个。通过迭代，直到每个节点的标签与其邻接点中出现次数最多的标签相同，则达到稳定状态，算法结束。此时具有相同标签的节点即属于同一个社区。
2)LPA算法虽然有很多优势，但无法发现重叠社区结构。
3)11个社区的发现是基于动态的行为，12个联盟是静态属性,不一等于原来静态物理属性

Thinking3	微博采用了类似FaceBook的EdgeRank算法，如果你给微博的信息流做设计，你会如何设计？
1)权重高低按：粉丝亲密度、内容质量、原创程度等来区分
亲密度（Affinity Score）：我和action之间的亲密度
边的权重（Edge Weight）：即内容自身的权重
新鲜程度（Time Decay）：保证内容的时效性
综合排序:综合考虑三个维度的数据，进行综合处理判断，决定内容的优先级
2）用户可以接受，收集用户的数据进行分析,信息流广告通过标签进行定向投放，根据用户的需求选择曝光,根据用户画像结果做个性化推送。
3)信息流产品，依托于用户流量和推荐算法,可设计三种变现方式知识付费（当用户粘性足够的时候，可以打造热点创作者IP或内容IP，推出付费的内容消费）、电商变现（结合内容消费场景，将用户往电商消费场景引导）、精准广告营销

Action1	使用Python模拟下面的PageRank计算过程，求每个节点的影响力（迭代100次）
见page_rank.py

Action2	使用TextRank对新闻进行关键词提取，及文章摘要输出
见sentence_textrank.py